// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using database_rules;

namespace Project.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20181016083936_QUESTIONS_GENERATED")]
    partial class QUESTIONS_GENERATED
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tables.Question_table", b =>
                {
                    b.Property<int>("question_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("category");

                    b.Property<string>("questions");

                    b.Property<int>("template_id");

                    b.Property<string>("topic");

                    b.HasKey("question_id");

                    b.HasIndex("template_id");

                    b.ToTable("Question_Table");
                });

            modelBuilder.Entity("Tables.Template", b =>
                {
                    b.Property<int>("template_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("category");

                    b.Property<string>("sparql");

                    b.Property<string>("text");

                    b.Property<string>("topic");

                    b.HasKey("template_id");

                    b.ToTable("Template");
                });

            modelBuilder.Entity("Tables.Question_table", b =>
                {
                    b.HasOne("Tables.Template")
                        .WithMany("questions_topic")
                        .HasForeignKey("template_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
